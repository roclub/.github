name: Rust format, lint, test (build and upload)

on:
  workflow_call:
    inputs:
      toolchain_version:
        required: false
        type: string
        default: "stable"
      system_packages:
        required: false
        type: string
      target:
        required: true
        type: string
      build_and_upload:
        required: false
        type: boolean
        default: false
      build_base_image:
        required: false
        type: string
      
jobs:
  build_and_upload:
    name: Build Rust binaries and upload artifact
    if: ${{ inputs.build_and_upload }} == true
    runs-on: temp
    steps:
    - uses: actions/checkout@v3

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        
    - name: Install required system packages
      if: ${{ inputs.system_packages }} != ""
      run: |
        sudo apt-get update && sudo apt-get upgrade -y
        sudo apt-get install ${{ inputs.system_packages }} -y

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker Pull Base Image
      run: |
        docker pull ${{ inputs.build_base_image }}

    - name: Build for cross-targets
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --target armv7-unknown-linux-gnueabihf --release

    - uses: actions/upload-artifact@v3
      with:
        name: edge-software-binaries
        path: |
          target/armv7-unknown-linux-gnueabihf/release/*
          !target/armv7-unknown-linux-gnueabihf/release/*.d
          !target/armv7-unknown-linux-gnueabihf/release/build
          !target/armv7-unknown-linux-gnueabihf/release/deps
          !target/armv7-unknown-linux-gnueabihf/release/examples
          !target/armv7-unknown-linux-gnueabihf/release/incremental
